version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: gopro-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  app:
    build: .
    container_name: gopro-processor
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - REDIS_URL=redis://redis:6379
      - UPLOAD_DIR=/app/uploads
      - OUTPUT_DIR=/app/outputs
      - MAX_FILE_SIZE=10737418240
      - FILE_RETENTION_HOURS=24
      - FFMPEG_THREADS=4
      - MAX_CONCURRENT_JOBS=2
    volumes:
      - ./uploads:/app/uploads
      - ./outputs:/app/outputs
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  # Optional: Nginx reverse proxy for production-like testing
  nginx:
    image: nginx:alpine
    container_name: gopro-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    restart: unless-stopped
    profiles:
      - with-nginx

volumes:
  redis_data:
    driver: local

networks:
  default:
    name: gopro-network
    driver: bridge
